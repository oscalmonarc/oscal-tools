<% cache render_async_cache_key(request.path), :skip_digest => true do %>
	<%= button_to 'All Docs', docs_path, method: :get  %><br>
	<% require 'open-uri' %>
	<%
	@doc.imported = Time.current
	@doc.save
	Provider.all.destroy_all
	path = @doc.grab_file_path
	
	data = IO.binread(path)
	data = data.encode(Encoding.find('UTF-8'), {invalid: :replace, undef: :replace, replace: ''})
	providers = data.split "\r\n"
	
	%> providers <% providers.count %> <br<br><% 
	counter = 0
	%> counter <%= counter %> <br<br><% 
	
	providers.each do |provider|
		parent = nil
		%> Provider = <%= provider.inspect %> <br> <%
		fields = provider.split ","
		if has_data? (fields)
			counter = 0
			name = fields[0]
			if (name != "Name")
				parent = fields[1]
				%> name - <%= name %><br><%
				%> parent - <%= parent %><br><%
				if (parent != nil) || (parent != "")
					parent = Provider.where(name: parent).first 
				else
					parent = nil
				end  
				
				tmp_provider = Provider.find_or_create_by(name: name, parent: parent )
				
				%> <br><%
			end
		end
	end
end
	%>